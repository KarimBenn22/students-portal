/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/signup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description User info and credentials */
            requestBody: {
                content: {
                    "application/json": {
                        username: string;
                        displayName: string;
                        /** @enum {string} */
                        role: "student" | "teacher";
                        password: string;
                        confirmPassword: string;
                    };
                };
            };
            responses: {
                /** @description User's session and info */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            token: string;
                            userId: string;
                            createdAt: string;
                            expiresAt: string;
                            user: {
                                id: string;
                                username: string;
                                displayName: string;
                                /** @enum {string} */
                                role: "student" | "teacher";
                                createdAt: string;
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Password weak error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "password_weak";
                            /** @enum {string} */
                            message: "Password is weak";
                        };
                    };
                };
                /** @description Already signed in error */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "already_authenticated";
                            /** @enum {string} */
                            message: "You can't do that while signed in";
                        };
                    };
                };
                /** @description Username taken error */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "username_taken";
                            /** @enum {string} */
                            message: "Username is already taken";
                        };
                    };
                };
                /** @description Sign up validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            /** @example {
                             *       "issues": [
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "username"
                             *           ],
                             *           "message": "Username is required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "displayName"
                             *           ],
                             *           "message": "Display name is required"
                             *         },
                             *         {
                             *           "expected": "'student' | 'teacher'",
                             *           "received": "undefined",
                             *           "code": "invalid_type",
                             *           "path": [
                             *             "role"
                             *           ],
                             *           "message": "Role is required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "password"
                             *           ],
                             *           "message": "Required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "confirmPassword"
                             *           ],
                             *           "message": "Password confirmation is required"
                             *         }
                             *       ],
                             *       "name": "ZodError"
                             *     } */
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signin": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description User credentials */
            requestBody: {
                content: {
                    "application/json": {
                        username: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description User's session and info */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            token: string;
                            userId: string;
                            createdAt: string;
                            expiresAt: string;
                            user: {
                                id: string;
                                username: string;
                                displayName: string;
                                /** @enum {string} */
                                role: "student" | "teacher";
                                createdAt: string;
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Invalid credentials error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "invalid_credentials";
                            /** @enum {string} */
                            message: "Invalid credentials";
                        };
                    };
                };
                /** @description Already signed in error */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "already_authenticated";
                            /** @enum {string} */
                            message: "You can't do that while signed in";
                        };
                    };
                };
                /** @description Sign in validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            /** @example {
                             *       "issues": [
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "username"
                             *           ],
                             *           "message": "Username is required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "password"
                             *           ],
                             *           "message": "Password is required"
                             *         }
                             *       ],
                             *       "name": "ZodError"
                             *     } */
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/signout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Signed out successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User's session and info */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            token: string;
                            userId: string;
                            createdAt: string;
                            expiresAt: string;
                            user: {
                                id: string;
                                username: string;
                                displayName: string;
                                /** @enum {string} */
                                role: "student" | "teacher";
                                createdAt: string;
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Unauthorized error */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "unauthorized";
                            /** @enum {string} */
                            message: "Unauthorized";
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/teacher/projects": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    q?: string;
                    specialty?: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                    category?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Projects list */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            title: string;
                            description: string;
                            author: string;
                            /** @enum {string} */
                            specialty: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                            category: string;
                            createdAt: string;
                            updatedAt: string;
                        }[];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "unauthorized";
                            /** @enum {string} */
                            message: "Unauthorized";
                        };
                    };
                };
                /** @description Get projects validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Project info */
            requestBody: {
                content: {
                    "application/json": {
                        title: string;
                        description: string;
                        /** @enum {string} */
                        specialty: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                        category: string;
                    };
                };
            };
            responses: {
                /** @description Project created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            title: string;
                            description: string;
                            author: string;
                            /** @enum {string} */
                            specialty: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                            category: string;
                            createdAt: string;
                            updatedAt: string;
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "unauthorized";
                            /** @enum {string} */
                            message: "Unauthorized";
                        };
                    };
                };
                /** @description Project validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            /** @example {
                             *       "issues": [
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "title"
                             *           ],
                             *           "message": "Required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "description"
                             *           ],
                             *           "message": "Required"
                             *         },
                             *         {
                             *           "expected": "'L3 SI' | 'L3 ISIL' | 'M2 SIGL' | 'M2 IA' | 'M2 RTIC' | 'M2 IDO'",
                             *           "received": "undefined",
                             *           "code": "invalid_type",
                             *           "path": [
                             *             "specialty"
                             *           ],
                             *           "message": "Required"
                             *         },
                             *         {
                             *           "code": "invalid_type",
                             *           "expected": "string",
                             *           "received": "undefined",
                             *           "path": [
                             *             "category"
                             *           ],
                             *           "message": "Required"
                             *         }
                             *       ],
                             *       "name": "ZodError"
                             *     } */
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/teacher/projects/:id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Project deleteded */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "unauthorized";
                            /** @enum {string} */
                            message: "Unauthorized";
                        };
                    };
                };
                /** @description Project not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "not_found";
                            /** @enum {string} */
                            message: "Project not found";
                        };
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            /** @description Project info */
            requestBody?: {
                content: {
                    "application/json": {
                        title?: string;
                        description?: string;
                        /** @enum {string} */
                        specialty?: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                        category?: string;
                    };
                };
            };
            responses: {
                /** @description Project updated */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            title: string;
                            description: string;
                            author: string;
                            /** @enum {string} */
                            specialty: "L3 SI" | "L3 ISIL" | "M2 SIGL" | "M2 IA" | "M2 RTIC" | "M2 IDO";
                            category: string;
                            createdAt: string;
                            updatedAt: string;
                        };
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "unauthorized";
                            /** @enum {string} */
                            message: "Unauthorized";
                        };
                    };
                };
                /** @description Project not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {string} */
                            code: "not_found";
                            /** @enum {string} */
                            message: "Project not found";
                        };
                    };
                };
                /** @description Project validation error */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example false */
                            success: boolean;
                            error: {
                                issues: {
                                    code: string;
                                    path: (string | number)[];
                                    message?: string;
                                }[];
                                name: string;
                            };
                        };
                    };
                };
            };
        };
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
